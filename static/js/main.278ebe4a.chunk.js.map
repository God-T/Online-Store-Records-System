{"version":3,"sources":["common/tableHead.jsx","common/tableBody.jsx","common/table.jsx","common/pagination.jsx","uilts/paginate.js","uilts/renderFuncs.js","uilts/env.js","service/customers.jsx","service/products.jsx","service/purchases.jsx","home/navBarHome.jsx","common/inputForm.jsx","common/select.jsx","common/form.jsx","service/form/productForm.jsx","service/form/customerForm.jsx","service/form/purchaseForm.jsx","home/home.jsx","App.js","index.js"],"names":["TableHead","sorting","path","currSortColumn","props","order","onSort","sortIcon","header","className","this","tableHeaders","map","onClick","label","key","Component","TableBody","renderCol","colName","item","countDisplayed","content","_","get","generateKey","id","bodyData","columnNames","Table","headers","Pagination","itemsCount","pageSize","onPageChange","currPage","pagesCount","Math","ceil","pages","range","page","paginate","items","pageNo","indexStart","slice","take","value","addButton","title","toPath","bootstrap_className","Fragment","to","REACT_APP_API_URL","process","Customers","state","customers","getHeaders","singlebodyData","name","style","paddingLeft","paddingRight","paddingTop","paddingBottom","count","handleDelete","customer","customersCount","requestOptions","method","body","JSON","stringify","customer_id","fetch","then","res","handlePageChange","filter","c","setState","catch","e","console","log","handleSort","getPagedData","toDisplay","orderBy","countAll","length","displayingData","addBtn","marginRight","display","marginTop","height","json","Products","products","product","productsCount","product_id","Purchases","purchases","purchase","backBtn","width","fontSize","position","bottom","match","params","customer_name","forEach","React","withRouter","NavBarHome","type","InputForm","rest","htmlFor","Select","options","Form","data","submitted","handleSubmit","event","preventDefault","doSubmit","handleChange","input","currentTarget","renderButton","disabled","isEmpty","renderSelect","onChange","renderInput","ProductForm","price","status","alertStyle","visibility","onSubmit","flexDirection","role","CustomerForm","contact","PurchaseForm","Home","exact","component","purchaseForm","from","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.278ebe4a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass TableHead extends Component {\r\n    sorting = (path) => {\r\n        const currSortColumn = { ...this.props.currSortColumn };\r\n        if (currSortColumn.path === path) {\r\n            currSortColumn.order =\r\n                currSortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n        } else {\r\n            currSortColumn.path = path;\r\n            currSortColumn.order = \"asc\";\r\n        }\r\n        this.props.onSort(currSortColumn);\r\n    };\r\n\r\n    sortIcon = (header) => {\r\n        const { currSortColumn } = this.props;\r\n        if (!header.path) return null;\r\n        if (header.path !== currSortColumn.path)\r\n            return <i className=\"fa fa-sort\"></i>;\r\n        if (currSortColumn.order === \"asc\")\r\n            return <i className=\"fa fa-sort-asc\"></i>;\r\n        if (currSortColumn.order === \"desc\")\r\n            return <i className=\"fa fa-sort-desc\"></i>;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {this.props.tableHeaders.map((header) => (\r\n                        <th\r\n                            className=\"clickable\"\r\n                            key={header.path || header.key}\r\n                            onClick={() => this.sorting(header.path)}\r\n                        >\r\n                            {header.label} {this.sortIcon(header)}\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableHead;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n    renderCol = (colName, item, countDisplayed) => {\r\n        if (colName.content) {\r\n            return colName.content(item, countDisplayed);\r\n        }\r\n        return _.get(item, colName.path); //handle muti path of objects e.g item.genre.name\r\n    };\r\n\r\n    generateKey = (item, colName) => {\r\n        return item.id + (colName.path || colName.key);\r\n    };\r\n\r\n    render() {\r\n        const { bodyData, columnNames, countDisplayed } = this.props;\r\n\r\n        return (\r\n            <tbody>\r\n                {bodyData.map(item => {\r\n                    return (\r\n                        <tr key={item.id}>\r\n                            {columnNames.map(colName => (\r\n                                <td key={this.generateKey(item, colName)}>\r\n                                    {this.renderCol(\r\n                                        colName,\r\n                                        item,\r\n                                        countDisplayed\r\n                                    )}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport TableHead from \"./tableHead\";\r\nimport TableBody from \"./tableBody\";\r\nexport default class Table extends Component {\r\n    render() {\r\n        const { headers, bodyData, onSort, currSortColumn, countDisplayed } =\r\n            this.props;\r\n        return (\r\n            <table className=\"table table-sm \">\r\n                <TableHead\r\n                    tableHeaders={headers}\r\n                    currSortColumn={currSortColumn}\r\n                    onSort={onSort}\r\n                />\r\n                <TableBody\r\n                    bodyData={bodyData}\r\n                    columnNames={headers}\r\n                    countDisplayed={countDisplayed}\r\n                />\r\n            </table>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currPage }) => {\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    //hide pagination if only one page or no page\r\n    if (pagesCount === 1) return null;\r\n\r\n    const pages = _.range(1, pagesCount + 1);\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                <li\r\n                    className={\r\n                        currPage === 1 ? \"page-item disabled\" : \"page-item\"\r\n                    }\r\n                >\r\n                    <a\r\n                        className=\"page-link\"\r\n                        onClick={() => onPageChange(currPage - 1)}\r\n                    >\r\n                        Prev\r\n                    </a>\r\n                </li>\r\n                {pages.map(page => (\r\n                    <li\r\n                        key={page}\r\n                        className={\r\n                            page === currPage ? \"page-item active\" : \"page-item\"\r\n                        }\r\n                    >\r\n                        <a\r\n                            className=\"page-link\"\r\n                            onClick={() => onPageChange(page)}\r\n                        >\r\n                            {page}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n                <li\r\n                    className={\r\n                        currPage === pagesCount\r\n                            ? \"page-item disabled\"\r\n                            : \"page-item\"\r\n                    }\r\n                >\r\n                    <a\r\n                        className=\"page-link\"\r\n                        onClick={() => onPageChange(currPage + 1)}\r\n                    >\r\n                        Next\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\n//for reuseable component\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n    currPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\n\r\nexport const paginate = (items, pageNo, pageSize) => {\r\n    const indexStart = (pageNo - 1) * pageSize;\r\n    return _(items).slice(indexStart).take(pageSize).value();\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport const addButton = (title, toPath, bootstrap_className) => (\r\n    <React.Fragment>\r\n        <Link to={toPath}>\r\n            <button className={bootstrap_className}>{title}</button>\r\n        </Link>\r\n        {/* <SearchBar\r\n        value={this.state.currSearchQuery}\r\n        onChange={this.handleSearch}\r\n    /> */}\r\n    </React.Fragment>\r\n);\r\n","export const { REACT_APP_API_URL } = process.env;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport _ from 'lodash';\r\n\r\nimport Table from '../common/table';\r\nimport Pagination from '../common/pagination';\r\nimport { paginate } from '../uilts/paginate';\r\nimport { addButton } from '../uilts/renderFuncs';\r\nimport { REACT_APP_API_URL } from '../uilts/env';\r\n\r\nexport default class Customers extends Component {\r\n    state = {\r\n        customers: [],\r\n        headers: [{ path: '', label: '' }],\r\n        currPage: 1,\r\n        pageSize: 3,\r\n        currSortColumn: { path: 'name', order: 'asc' },\r\n    };\r\n\r\n    getHeaders = [\r\n        { path: 'name', label: 'Name' },\r\n        { path: 'contact', label: 'Contact' },\r\n        { path: 'more', label: 'More...' },\r\n        {\r\n            key: 'view-purchases',\r\n            content: singlebodyData => (\r\n                <Link\r\n                    to={`/purchases/${singlebodyData.id}/${singlebodyData.name}`}\r\n                >\r\n                    <button\r\n                        style={{\r\n                            paddingLeft: '10px',\r\n                            paddingRight: '10px',\r\n                            paddingTop: '2px',\r\n                            paddingBottom: '2px',\r\n                        }}\r\n                        className='btn btn-outline-info'\r\n                    >\r\n                        View Purchases\r\n                    </button>\r\n                </Link>\r\n            ),\r\n        },\r\n        {\r\n            key: 'delete',\r\n            content: (singlebodyData, count) => (\r\n                <button\r\n                    onClick={() => this.handleDelete(singlebodyData, count)}\r\n                    style={{ paddingLeft: '10px', paddingRight: '10px' }}\r\n                    className='btn btn-danger btn-sm'\r\n                >\r\n                    X\r\n                </button>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    componentDidMount() {\r\n        fetch(`${REACT_APP_API_URL}/customer/all`).then(res =>\r\n            res.json().then(customers => {\r\n                this.setState({\r\n                    customers,\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    handleDelete = (customer, customersCount) => {\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                customer_id: customer.id,\r\n            }),\r\n        };\r\n        fetch(`${REACT_APP_API_URL}/customer/delete`, requestOptions)\r\n            .then(res => {\r\n                if (customersCount === 1)\r\n                    this.handlePageChange(this.state.currPage - 1);\r\n                const customers = this.state.customers.filter(\r\n                    c => c.id !== customer.id\r\n                );\r\n                this.setState({ customers });\r\n            })\r\n            .catch(e => {\r\n                console.log('delete error', e);\r\n            });\r\n    };\r\n\r\n    handlePageChange = page => {\r\n        this.setState({ currPage: page });\r\n    };\r\n    handleSort = currSortColumn => {\r\n        this.setState({ currSortColumn });\r\n    };\r\n\r\n    getPagedData = () => {\r\n        const { pageSize, currPage, customers, currSortColumn } = this.state;\r\n        //sort:\r\n        let toDisplay = _.orderBy(\r\n            customers,\r\n            [currSortColumn.path],\r\n            [currSortColumn.order]\r\n        );\r\n        //count all\r\n        const countAll = toDisplay.length;\r\n        //pagindate:\r\n        toDisplay = paginate(toDisplay, currPage, pageSize);\r\n        return { toDisplay, countAll };\r\n    };\r\n\r\n    displayingData = ({ toDisplay, countAll }) => {\r\n        const { pageSize, currPage, currSortColumn } = this.state;\r\n        const addBtn = addButton(\r\n            '+ New Customer',\r\n            '/customers/new',\r\n            'btn btn-success btn-sm'\r\n        );\r\n        return countAll === 0 ? (\r\n            <React.Fragment>\r\n                <p style={{ marginRight: '20px', display: 'inline-block' }}>\r\n                    There are no customers.\r\n                </p>\r\n                {addBtn}\r\n            </React.Fragment>\r\n        ) : (\r\n            <React.Fragment>\r\n                <p style={{ marginRight: '20px', display: 'inline-block' }}>\r\n                    Showing {countAll} customers.\r\n                </p>\r\n                <span style={{ marginTop: '3px' }}>{addBtn}</span>\r\n                <Table\r\n                    bodyData={toDisplay}\r\n                    onSort={this.handleSort}\r\n                    headers={this.getHeaders}\r\n                    currSortColumn={currSortColumn}\r\n                    countDisplayed={toDisplay.length}\r\n                />\r\n                <br style={{ height: '300px' }} />\r\n\r\n                <Pagination\r\n                    itemsCount={countAll}\r\n                    pageSize={pageSize}\r\n                    currPage={currPage}\r\n                    onPageChange={this.handlePageChange}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className='col'>\r\n                    {this.displayingData(this.getPagedData())}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport Table from '../common/table';\r\nimport Pagination from '../common/pagination';\r\nimport { paginate } from '../uilts/paginate';\r\nimport { addButton } from '../uilts/renderFuncs';\r\nimport { REACT_APP_API_URL } from '../uilts/env';\r\n\r\nexport default class Products extends Component {\r\n    state = {\r\n        products: [],\r\n        headers: [{ path: '', label: '' }],\r\n        currPage: 1,\r\n        pageSize: 3,\r\n        currSortColumn: { path: 'name', order: 'asc' },\r\n    };\r\n    getHeaders = [\r\n        { path: 'name', label: 'Name' },\r\n        { path: 'price', label: 'Price' },\r\n        { path: 'more', label: 'More...' },\r\n        {\r\n            key: 'delete',\r\n            content: (singlebodyData, count) => (\r\n                <button\r\n                    onClick={() => this.handleDelete(singlebodyData, count)}\r\n                    style={{ paddingLeft: '10px', paddingRight: '10px' }}\r\n                    className='btn btn-danger btn-sm'\r\n                >\r\n                    X\r\n                </button>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    componentDidMount() {\r\n        fetch(`${REACT_APP_API_URL}/product/all`).then(res =>\r\n            res.json().then(products => {\r\n                this.setState({\r\n                    products,\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    handleDelete = (product, productsCount) => {\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                product_id: product.id,\r\n            }),\r\n        };\r\n        fetch(`${REACT_APP_API_URL}/product/delete`, requestOptions)\r\n            .then(res => {\r\n                if (productsCount === 1) {\r\n                    this.handlePageChange(this.state.currPage - 1);\r\n                }\r\n                const products = this.state.products.filter(\r\n                    c => c.id !== product.id\r\n                );\r\n                this.setState({ products });\r\n            })\r\n            .catch(e => {\r\n                console.log('delete error', e);\r\n            });\r\n    };\r\n\r\n    handlePageChange = page => {\r\n        this.setState({ currPage: page });\r\n    };\r\n    handleSort = currSortColumn => {\r\n        this.setState({ currSortColumn });\r\n    };\r\n\r\n    getPagedData = () => {\r\n        const { pageSize, currPage, products, currSortColumn } = this.state;\r\n        //sort:\r\n        let toDisplay = _.orderBy(\r\n            products,\r\n            [currSortColumn.path],\r\n            [currSortColumn.order]\r\n        );\r\n        //count all\r\n        const countAll = toDisplay.length;\r\n        //pagindate:\r\n        toDisplay = paginate(toDisplay, currPage, pageSize);\r\n        return { toDisplay, countAll };\r\n    };\r\n\r\n    displayingData = ({ toDisplay, countAll }) => {\r\n        const { pageSize, currPage, currSortColumn } = this.state;\r\n        const addBtn = addButton(\r\n            '+ New Product',\r\n            '/products/new',\r\n            'btn btn-success btn-sm'\r\n        );\r\n        return countAll === 0 ? (\r\n            <React.Fragment>\r\n                <p style={{ marginRight: '20px', display: 'inline-block' }}>\r\n                    There are no products.\r\n                </p>\r\n                {addBtn}\r\n            </React.Fragment>\r\n        ) : (\r\n            <React.Fragment>\r\n                <p style={{ marginRight: '20px', display: 'inline-block' }}>\r\n                    Showing {countAll} products.\r\n                </p>\r\n                <span style={{ marginTop: '3px' }}>{addBtn}</span>\r\n                <Table\r\n                    bodyData={toDisplay}\r\n                    onSort={this.handleSort}\r\n                    headers={this.getHeaders}\r\n                    currSortColumn={currSortColumn}\r\n                    countDisplayed={toDisplay.length}\r\n                />\r\n                <br style={{ height: '300px' }} />\r\n\r\n                <Pagination\r\n                    itemsCount={countAll}\r\n                    pageSize={pageSize}\r\n                    currPage={currPage}\r\n                    onPageChange={this.handlePageChange}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className='col'>\r\n                    {this.displayingData(this.getPagedData())}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport Table from '../common/table';\r\nimport Pagination from '../common/pagination';\r\nimport { paginate } from '../uilts/paginate';\r\nimport { addButton } from '../uilts/renderFuncs';\r\nimport { withRouter } from 'react-router';\r\nimport { REACT_APP_API_URL } from '../uilts/env';\r\nclass Purchases extends React.Component {\r\n    state = {\r\n        customer: { id: '', name: '' },\r\n        purchases: [],\r\n        headers: [{ path: '', label: '' }],\r\n        currPage: 1,\r\n        pageSize: 3,\r\n        currSortColumn: { path: 'name', order: 'asc' },\r\n    };\r\n\r\n    getHeaders = [\r\n        { path: 'product.name', label: 'Product' },\r\n        {\r\n            key: 'delete',\r\n            content: (singlebodyData, count) => (\r\n                <button\r\n                    onClick={() => this.handleDelete(singlebodyData, count)}\r\n                    style={{ paddingLeft: '10px', paddingRight: '10px' }}\r\n                    className='btn btn-danger btn-sm'\r\n                >\r\n                    X\r\n                </button>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    componentDidMount() {\r\n        const { customer_id, customer_name } = this.props.match.params;\r\n        console.log(customer_id);\r\n        this.setState({\r\n            customer: { id: customer_id, name: customer_name },\r\n        });\r\n        fetch(`${REACT_APP_API_URL}/purchase?customer_id=${customer_id}`).then(\r\n            res =>\r\n                res.json().then(purchases => {\r\n                    console.log('purchases', purchases);\r\n                    purchases.forEach(purchase => {\r\n                        fetch(\r\n                            `${REACT_APP_API_URL}/product/${purchase.product_id}`\r\n                        ).then(res =>\r\n                            res.json().then(product => {\r\n                                console.log('product', product);\r\n                                console.log('data', {\r\n                                    id: purchase.id,\r\n                                    product,\r\n                                });\r\n                                this.setState({\r\n                                    purchases: [\r\n                                        { id: purchase.id, product },\r\n                                        ...this.state.purchases,\r\n                                    ],\r\n                                });\r\n                                console.log('state', this.state.purchases);\r\n                            })\r\n                        );\r\n                    });\r\n                })\r\n        );\r\n    }\r\n    // /api/product/:product_id\r\n    handleDelete = (purchase, productsCount) => {\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                id: purchase.id,\r\n            }),\r\n        };\r\n        fetch(`${REACT_APP_API_URL}/purchase/delete`, requestOptions)\r\n            .then(() => {\r\n                if (productsCount === 1) {\r\n                    this.handlePageChange(this.state.currPage - 1);\r\n                }\r\n                const purchases = this.state.purchases.filter(\r\n                    c => c.id !== purchase.id\r\n                );\r\n                this.setState({ purchases });\r\n            })\r\n            .catch(e => {\r\n                console.log('delete error', e);\r\n            });\r\n    };\r\n\r\n    handlePageChange = page => {\r\n        this.setState({ currPage: page });\r\n    };\r\n    handleSort = currSortColumn => {\r\n        this.setState({ currSortColumn });\r\n    };\r\n\r\n    getPagedData = () => {\r\n        const { pageSize, currPage, purchases, currSortColumn } = this.state;\r\n        //sort:\r\n        let toDisplay = _.orderBy(\r\n            purchases,\r\n            [currSortColumn.path],\r\n            [currSortColumn.order]\r\n        );\r\n        //count all\r\n        const countAll = toDisplay.length;\r\n        //pagindate:\r\n        toDisplay = paginate(toDisplay, currPage, pageSize);\r\n        return { toDisplay, countAll };\r\n    };\r\n\r\n    displayingData = ({ toDisplay, countAll }) => {\r\n        const { pageSize, currPage, currSortColumn } = this.state;\r\n        const addBtn = addButton(\r\n            '+ New Purchase',\r\n            `/purchases/${this.state.customer.id}/${this.state.customer.name}/new`,\r\n            'btn btn-success btn-sm'\r\n        );\r\n        const backBtn = (\r\n            <div style={{ width: '80%' }}>\r\n                <div className='d-flex justify-content-between'>\r\n                    <br />\r\n                    {addButton('Back', '/customers', 'btn btn-primary')}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return countAll === 0 ? (\r\n            <React.Fragment>\r\n                <p style={{ marginRight: '20px', display: 'inline-block' }}>\r\n                    There are no purchases for{' '}\r\n                    <strong\r\n                        className='text-info'\r\n                        style={{ fontSize: 'larger' }}\r\n                    >\r\n                        {this.state.customer.name}\r\n                    </strong>\r\n                    .\r\n                </p>\r\n                <span style={{ position: 'relative', bottom: '2px' }}>\r\n                    {addBtn}\r\n                </span>\r\n                {backBtn}\r\n            </React.Fragment>\r\n        ) : (\r\n            <React.Fragment>\r\n                <p style={{ marginRight: '20px', display: 'inline-block' }}>\r\n                    Showing {countAll} purchases for{' '}\r\n                    <strong\r\n                        className='text-info'\r\n                        style={{ fontSize: 'larger' }}\r\n                    >\r\n                        {this.state.customer.name}\r\n                    </strong>\r\n                    .\r\n                </p>\r\n                <span style={{ position: 'relative', bottom: '2px' }}>\r\n                    {addBtn}\r\n                </span>\r\n\r\n                <div style={{ width: '70%' }}>\r\n                    <Table\r\n                        bodyData={toDisplay}\r\n                        onSort={this.handleSort}\r\n                        headers={this.getHeaders}\r\n                        currSortColumn={currSortColumn}\r\n                        countDisplayed={toDisplay.length}\r\n                    />\r\n                    <br style={{ height: '300px' }} />\r\n\r\n                    <Pagination\r\n                        itemsCount={countAll}\r\n                        pageSize={pageSize}\r\n                        currPage={currPage}\r\n                        onPageChange={this.handlePageChange}\r\n                    />\r\n                </div>\r\n                {backBtn}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className='col'>\r\n                    {this.displayingData(this.getPagedData())}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Purchases);\r\n","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom'; //prevent full page reload\r\n\r\nconst NavBarHome = () => {\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-dark bg-primary'>\r\n            <Link className='navbar-brand' to='/'>\r\n                Online Store Records\r\n            </Link>\r\n            <button\r\n                className='navbar-toggler'\r\n                type='button'\r\n                data-toggle='collapse'\r\n                data-target='#navbarNav'\r\n                aria-controls='navbarNav'\r\n                aria-expanded='false'\r\n                aria-label='Toggle navigation'\r\n            >\r\n                <span className='navbar-toggler-icon'></span>\r\n            </button>\r\n            <div className='collapse navbar-collapse' id='navbarNav'>\r\n                <ul className='navbar-nav'>\r\n                    <li className='nav-item'>\r\n                        <NavLink className='nav-item nav-link' to='/products'>\r\n                            All Products\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <NavLink className='nav-item nav-link' to='/customers'>\r\n                            All Customers\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBarHome;\r\n","import React from \"react\";\r\n\r\nconst InputForm = ({ name, label, ...rest }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input {...rest} className=\"form-control\" id={name} name={name} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputForm;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, ...rest }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <select className=\"form-control\" id={name} name={name} {...rest}>\r\n                <option value=\"\">Choose here</option>\r\n                {options.map(item => (\r\n                    <option key={item.id} value={item.id}>\r\n                        {item.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport InputForm from \"./inputForm\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        data: {},\r\n        submitted: false,\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.doSubmit();\r\n    };\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const data = this.state.data;\r\n        this.state.data[input.name] = input.value;\r\n        console.log(\"input.value: \", input.value);\r\n        this.setState({ data, submitted: false });\r\n    };\r\n\r\n    renderButton = (label, ...rest) => {\r\n        return (\r\n            <button\r\n                type=\"submit\"\r\n                disabled={this.isEmpty()}\r\n                className=\"btn btn-primary\"\r\n                {...rest}\r\n            >\r\n                {label}\r\n            </button>\r\n        );\r\n    };\r\n\r\n    renderSelect = (name, label, options) => {\r\n        const { data } = this.state;\r\n        return (\r\n            <Select\r\n                name={name}\r\n                label={label}\r\n                options={options}\r\n                value={data[name]}\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    };\r\n\r\n    renderInput = (name, label, type = \"text\") => {\r\n        const { data } = this.state;\r\n        return (\r\n            <InputForm\r\n                type={type}\r\n                name={name}\r\n                label={label}\r\n                value={data[name]}\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    };\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport Form from './../../common/form';\r\nimport { addButton } from '../../uilts/renderFuncs';\r\nimport { REACT_APP_API_URL } from '../../uilts/env';\r\n\r\nclass ProductForm extends Form {\r\n    state = {\r\n        data: {\r\n            name: '',\r\n            price: '',\r\n        },\r\n        headers: [\r\n            { name: 'name', label: 'Enter product name:' },\r\n            { name: 'price', label: 'Enter product price:' },\r\n        ],\r\n        submitted: false,\r\n    };\r\n\r\n    doSubmit = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.data.name,\r\n                price: this.state.data.price,\r\n            }),\r\n        };\r\n        fetch(`${REACT_APP_API_URL}/product/add`, requestOptions)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    this.setState({\r\n                        submitted: true,\r\n                        data: {\r\n                            name: '',\r\n                            price: '',\r\n                        },\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log('adding error', e);\r\n            });\r\n    };\r\n\r\n    isEmpty = () => {\r\n        return this.state.data.name === '' || this.state.data.price === ''\r\n            ? true\r\n            : false;\r\n    };\r\n\r\n    render() {\r\n        let alertStyle = this.state.submitted\r\n            ? {\r\n                  marginTop: '10px',\r\n                  visibility: 'visible',\r\n              }\r\n            : {\r\n                  marginTop: '10px',\r\n                  visibility: 'hidden',\r\n              };\r\n        return (\r\n            <div style={{ width: '60%' }}>\r\n                <form\r\n                    onSubmit={this.handleSubmit}\r\n                    style={{ display: 'flex', flexDirection: 'column' }}\r\n                >\r\n                    {this.state.headers.map(({ name, label }) => (\r\n                        <div key={name + label}>\r\n                            {this.renderInput(name, label)}\r\n                        </div>\r\n                    ))}\r\n                    <div className='d-flex justify-content-between'>\r\n                        {this.renderButton('Add New Product')}\r\n                        {addButton('Cancel', '/products', 'btn btn-primary')}\r\n                    </div>\r\n                </form>\r\n                <div\r\n                    className='alert alert-success'\r\n                    role='alert'\r\n                    style={alertStyle}\r\n                >\r\n                    New product added!\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductForm;\r\n","import React from 'react';\r\nimport Form from './../../common/form';\r\nimport { addButton } from '../../uilts/renderFuncs';\r\nimport { REACT_APP_API_URL } from '../../uilts/env';\r\n\r\nclass CustomerForm extends Form {\r\n    state = {\r\n        data: {\r\n            name: '',\r\n            contact: '',\r\n        },\r\n        headers: [\r\n            { name: 'name', label: 'Enter customer name:' },\r\n            { name: 'contact', label: 'Enter customer contact:' },\r\n        ],\r\n        submitted: false,\r\n    };\r\n\r\n    doSubmit = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.data.name,\r\n                contact: this.state.data.contact,\r\n            }),\r\n        };\r\n        fetch(`${REACT_APP_API_URL}/customer/add`, requestOptions)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    this.setState({\r\n                        submitted: true,\r\n                        data: {\r\n                            name: '',\r\n                            contact: '',\r\n                        },\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log('adding error', e);\r\n            });\r\n    };\r\n\r\n    isEmpty = () => {\r\n        return this.state.data.name === '' || this.state.data.contact === ''\r\n            ? true\r\n            : false;\r\n    };\r\n\r\n    render() {\r\n        let alertStyle = this.state.submitted\r\n            ? {\r\n                  marginTop: '10px',\r\n                  visibility: 'visible',\r\n              }\r\n            : {\r\n                  marginTop: '10px',\r\n                  visibility: 'hidden',\r\n              };\r\n        return (\r\n            <div style={{ width: '60%' }}>\r\n                <form\r\n                    onSubmit={this.handleSubmit}\r\n                    style={{ display: 'flex', flexDirection: 'column' }}\r\n                >\r\n                    {this.state.headers.map(({ name, label }) => (\r\n                        <div key={name + label}>\r\n                            {this.renderInput(name, label)}\r\n                        </div>\r\n                    ))}\r\n                    <div>\r\n                        <div className='d-flex justify-content-between'>\r\n                            {this.renderButton('Add New Customer')}\r\n                            {addButton(\r\n                                'Cancel',\r\n                                '/customers',\r\n                                'btn btn-primary'\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div\r\n                    className='alert alert-success'\r\n                    role='alert'\r\n                    style={alertStyle}\r\n                >\r\n                    New customer added!\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomerForm;\r\n","import React from 'react';\r\nimport Form from '../../common/form';\r\nimport { addButton } from '../../uilts/renderFuncs';\r\nimport { withRouter } from 'react-router';\r\nimport { REACT_APP_API_URL } from '../../uilts/env';\r\n\r\nclass PurchaseForm extends Form {\r\n    state = {\r\n        customer: { customer_id: null, customer_name: null },\r\n        products: [],\r\n        data: { product_id: '' },\r\n        header: { name: 'product_id', label: 'Select product to purchase:' },\r\n        submitted: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ customer: this.props.match.params });\r\n        fetch(`${REACT_APP_API_URL}/product/all`).then(res =>\r\n            res.json().then(products => {\r\n                console.log('invoke componentDidMount', products.length);\r\n                this.setState({\r\n                    products,\r\n                });\r\n                console.log('invoke componentDidMount', this.state);\r\n            })\r\n        );\r\n    }\r\n\r\n    doSubmit = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                customer_id: this.state.customer.customer_id,\r\n                product_id: this.state.data.product_id,\r\n            }),\r\n        };\r\n        fetch(`${REACT_APP_API_URL}/purchase/add`, requestOptions)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    console.log('in fetch');\r\n                    this.setState({\r\n                        submitted: true,\r\n                        data: {\r\n                            product_id: '',\r\n                        },\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log('failed fetch');\r\n                console.log('adding error', e);\r\n            });\r\n    };\r\n\r\n    isEmpty = () => {\r\n        return this.state.data.product_id === '' ? true : false;\r\n    };\r\n\r\n    render() {\r\n        let alertStyle = this.state.submitted\r\n            ? {\r\n                  marginTop: '10px',\r\n                  visibility: 'visible',\r\n              }\r\n            : {\r\n                  marginTop: '10px',\r\n                  visibility: 'hidden',\r\n              };\r\n        console.log('this.state.products.length:', this.state.products.length);\r\n        return (\r\n            <div style={{ width: '60%' }}>\r\n                {!this.state.products.length ? (\r\n                    <React.Fragment>\r\n                        <p> There are no products in the store.</p>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <br />\r\n                            {addButton(\r\n                                'Back',\r\n                                `/purchases/${this.state.customer.customer_id}/${this.state.customer.customer_name}`,\r\n                                'btn btn-primary'\r\n                            )}\r\n                        </div>\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <React.Fragment>\r\n                        <form\r\n                            onSubmit={this.handleSubmit}\r\n                            style={{ display: 'flex', flexDirection: 'column' }}\r\n                        >\r\n                            {this.renderSelect(\r\n                                this.state.header.name,\r\n                                this.state.header.label,\r\n                                this.state.products\r\n                            )}\r\n                            <div className='d-flex justify-content-between'>\r\n                                {this.renderButton('Add New Purchase')}\r\n                                {addButton(\r\n                                    'Cancel',\r\n                                    `/purchases/${this.state.customer.customer_id}/${this.state.customer.customer_name}`,\r\n                                    'btn btn-primary'\r\n                                )}\r\n                            </div>\r\n                        </form>\r\n                        <div\r\n                            className='alert alert-success'\r\n                            role='alert'\r\n                            style={alertStyle}\r\n                        >\r\n                            New purchase added!\r\n                        </div>\r\n                    </React.Fragment>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(PurchaseForm);\r\n//TODO add new purchase list all products (select)\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Customers from \"./../service/customers\";\r\nimport Products from \"./../service/products\";\r\nimport Purchases from \"./../service/purchases\";\r\nimport NavBarHome from \"./navBarHome\";\r\nimport ProductForm from \"../service/form/productForm\";\r\nimport CustomerForm from \"../service/form/customerForm\";\r\nimport purchaseForm from \"../service/form/purchaseForm\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <header>\r\n                    <NavBarHome />\r\n                </header>\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        {/* switch order with: most specific one --> generate one*/}\r\n                        <Route\r\n                            exact\r\n                            path=\"/products/new\"\r\n                            component={ProductForm}\r\n                        />\r\n                        <Route exact path=\"/products\" component={Products} />{\" \"}\r\n                        <Route\r\n                            exact\r\n                            path=\"/customers/new\"\r\n                            component={CustomerForm}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/purchases/:customer_id/:customer_name/new\"\r\n                            component={purchaseForm}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/purchases/:customer_id/:customer_name\"\r\n                            component={Purchases}\r\n                        />\r\n                        <Route exact path=\"/customers\" component={Customers} />\r\n                        <Redirect from=\"/\" exact to=\"/products\" />\r\n                    </Switch>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import Home from './home/home';\r\nexport const App = () => <Home />;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport \"./index.css\";\r\n\r\nrender(\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}